{"ast":null,"code":"import algosdk from 'algosdk';\n\n// Algorand node configuration\nexport const algodServer = 'https://testnet-api.algonode.cloud';\nexport const algodPort = 443;\nexport const algodToken = '';\n\n// Create Algorand client\nexport const algodClient = new algosdk.Algodv2(algodToken, algodServer, algodPort);\n\n// Application configuration\nexport const APP_ID = 0; // Replace with your deployed application ID\nexport const MIN_BALANCE = 100000; // Minimum balance required for an account (0.1 ALGO)\n\n// Asset configuration\nexport const ASSET_ID = 0; // Replace with your created asset ID\n\n// Network configuration\nexport const NETWORK = 'testnet'; // 'mainnet' or 'testnet'\n\n// Transaction configuration\nexport const SUGGESTED_PARAMS = {\n  fee: 1000,\n  firstRound: 0,\n  lastRound: 0,\n  genesisID: '',\n  genesisHash: '',\n  flatFee: false\n};","map":{"version":3,"names":["algosdk","algodServer","algodPort","algodToken","algodClient","Algodv2","APP_ID","MIN_BALANCE","ASSET_ID","NETWORK","SUGGESTED_PARAMS","fee","firstRound","lastRound","genesisID","genesisHash","flatFee"],"sources":["C:/Users/naga shiva kumari/OneDrive/Documents/Blockchain/src/config/algorand.ts"],"sourcesContent":["import algosdk from 'algosdk';\r\n\r\n// Algorand node configuration\r\nexport const algodServer = 'https://testnet-api.algonode.cloud';\r\nexport const algodPort = 443;\r\nexport const algodToken = '';\r\n\r\n// Create Algorand client\r\nexport const algodClient = new algosdk.Algodv2(algodToken, algodServer, algodPort);\r\n\r\n// Application configuration\r\nexport const APP_ID = 0; // Replace with your deployed application ID\r\nexport const MIN_BALANCE = 100000; // Minimum balance required for an account (0.1 ALGO)\r\n\r\n// Asset configuration\r\nexport const ASSET_ID = 0; // Replace with your created asset ID\r\n\r\n// Network configuration\r\nexport const NETWORK = 'testnet'; // 'mainnet' or 'testnet'\r\n\r\n// Transaction configuration\r\nexport const SUGGESTED_PARAMS = {\r\n    fee: 1000,\r\n    firstRound: 0,\r\n    lastRound: 0,\r\n    genesisID: '',\r\n    genesisHash: '',\r\n    flatFee: false\r\n}; "],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;;AAE7B;AACA,OAAO,MAAMC,WAAW,GAAG,oCAAoC;AAC/D,OAAO,MAAMC,SAAS,GAAG,GAAG;AAC5B,OAAO,MAAMC,UAAU,GAAG,EAAE;;AAE5B;AACA,OAAO,MAAMC,WAAW,GAAG,IAAIJ,OAAO,CAACK,OAAO,CAACF,UAAU,EAAEF,WAAW,EAAEC,SAAS,CAAC;;AAElF;AACA,OAAO,MAAMI,MAAM,GAAG,CAAC,CAAC,CAAC;AACzB,OAAO,MAAMC,WAAW,GAAG,MAAM,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;;AAE3B;AACA,OAAO,MAAMC,OAAO,GAAG,SAAS,CAAC,CAAC;;AAElC;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,GAAG,EAAE,IAAI;EACTC,UAAU,EAAE,CAAC;EACbC,SAAS,EAAE,CAAC;EACZC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,EAAE;EACfC,OAAO,EAAE;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}