{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naga shiva kumari\\\\OneDrive\\\\Documents\\\\Blockchain\\\\src\\\\components\\\\AlgorandTest.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAlgorand } from '../contexts/AlgorandContext';\nimport './AlgorandTest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlgorandTest = () => {\n  _s();\n  const {\n    account,\n    accountInfo,\n    createAccount,\n    sendAlgos\n  } = useAlgorand();\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleCreateAccount = async () => {\n    try {\n      await createAccount();\n      alert('Account created successfully!');\n    } catch (error) {\n      console.error('Error creating account:', error);\n      alert('Error creating account');\n    }\n  };\n  const handleSendAlgos = async () => {\n    if (!account) {\n      alert('Please create an account first');\n      return;\n    }\n    try {\n      const txId = await sendAlgos(recipient, Number(amount));\n      alert(`Transaction successful! Transaction ID: ${txId}`);\n    } catch (error) {\n      console.error('Error sending ALGOs:', error);\n      alert('Error sending ALGOs');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"algorand-test\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Algorand Test Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Account Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", account.addr.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: \", accountInfo !== null && accountInfo !== void 0 && accountInfo.amount ? accountInfo.amount / 1000000 : 0, \" ALGO\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No account connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateAccount,\n        children: \"Create New Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transfer-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Send ALGOs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipient Address\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount (in ALGOs)\",\n        value: amount,\n        onChange: e => setAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendAlgos,\n        children: \"Send ALGOs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AlgorandTest, \"iy6e0sInv7xWk5dJpfRoPj96frY=\", false, function () {\n  return [useAlgorand];\n});\n_c = AlgorandTest;\nexport default AlgorandTest;\nvar _c;\n$RefreshReg$(_c, \"AlgorandTest\");","map":{"version":3,"names":["React","useState","useAlgorand","jsxDEV","_jsxDEV","AlgorandTest","_s","account","accountInfo","createAccount","sendAlgos","recipient","setRecipient","amount","setAmount","handleCreateAccount","alert","error","console","handleSendAlgos","txId","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addr","toString","onClick","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/naga shiva kumari/OneDrive/Documents/Blockchain/src/components/AlgorandTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useAlgorand } from '../contexts/AlgorandContext';\r\nimport './AlgorandTest.css';\r\n\r\nconst AlgorandTest: React.FC = () => {\r\n    const { account, accountInfo, createAccount, sendAlgos } = useAlgorand();\r\n    const [recipient, setRecipient] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n\r\n    const handleCreateAccount = async () => {\r\n        try {\r\n            await createAccount();\r\n            alert('Account created successfully!');\r\n        } catch (error) {\r\n            console.error('Error creating account:', error);\r\n            alert('Error creating account');\r\n        }\r\n    };\r\n\r\n    const handleSendAlgos = async () => {\r\n        if (!account) {\r\n            alert('Please create an account first');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const txId = await sendAlgos(recipient, Number(amount));\r\n            alert(`Transaction successful! Transaction ID: ${txId}`);\r\n        } catch (error) {\r\n            console.error('Error sending ALGOs:', error);\r\n            alert('Error sending ALGOs');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"algorand-test\">\r\n            <h2>Algorand Test Component</h2>\r\n            \r\n            <div className=\"account-section\">\r\n                <h3>Account Information</h3>\r\n                {account ? (\r\n                    <div>\r\n                        <p>Address: {account.addr.toString()}</p>\r\n                        <p>Balance: {accountInfo?.amount ? accountInfo.amount / 1000000 : 0} ALGO</p>\r\n                    </div>\r\n                ) : (\r\n                    <p>No account connected</p>\r\n                )}\r\n                <button onClick={handleCreateAccount}>Create New Account</button>\r\n            </div>\r\n\r\n            <div className=\"transfer-section\">\r\n                <h3>Send ALGOs</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Recipient Address\"\r\n                    value={recipient}\r\n                    onChange={(e) => setRecipient(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"Amount (in ALGOs)\"\r\n                    value={amount}\r\n                    onChange={(e) => setAmount(e.target.value)}\r\n                />\r\n                <button onClick={handleSendAlgos}>Send ALGOs</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlgorandTest; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}