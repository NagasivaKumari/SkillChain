{"ast":null,"code":"import JSONRequest from '../jsonrequest.js';\nimport { decodeJSON } from '../../../encoding/encoding.js';\nimport { Block } from './models/types.js';\nexport default class LookupBlock extends JSONRequest {\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  constructor(c, round) {\n    super(c);\n    this.round = BigInt(round);\n  }\n  /**\n   * @returns `/v2/blocks/${round}`\n   */\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n  /**\n   * Header only flag. When this is set to true, returned block does not contain the\n   * transactions.\n   */\n  headerOnly(headerOnly) {\n    this.query['header-only'] = headerOnly;\n    return this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response) {\n    return decodeJSON(response.getJSONText(), Block);\n  }\n}","map":{"version":3,"names":["JSONRequest","decodeJSON","Block","LookupBlock","constructor","c","round","BigInt","path","headerOnly","query","prepare","response","getJSONText"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\client\\v2\\indexer\\lookupBlock.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest.js';\nimport { HTTPClient, HTTPClientResponse } from '../../client.js';\nimport { decodeJSON } from '../../../encoding/encoding.js';\nimport { Block } from './models/types.js';\n\nexport default class LookupBlock extends JSONRequest<Block> {\n  private round: bigint;\n\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, round: number | bigint) {\n    super(c);\n    this.round = BigInt(round);\n  }\n\n  /**\n   * @returns `/v2/blocks/${round}`\n   */\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  /**\n   * Header only flag. When this is set to true, returned block does not contain the\n   * transactions.\n   */\n  headerOnly(headerOnly: boolean) {\n    this.query['header-only'] = headerOnly;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response: HTTPClientResponse): Block {\n    return decodeJSON(response.getJSONText(), Block);\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAE3C,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,KAAK,QAAQ,mBAAmB;AAEzC,eAAc,MAAOC,WAAY,SAAQH,WAAkB;EAGzD;;;;;;;;;;;;;EAaAI,YAAYC,CAAa,EAAEC,KAAsB;IAC/C,KAAK,CAACD,CAAC,CAAC;IACR,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;EAC5B;EAEA;;;EAGAE,IAAIA,CAAA;IACF,OAAO,cAAc,IAAI,CAACF,KAAK,EAAE;EACnC;EAEA;;;;EAIAG,UAAUA,CAACA,UAAmB;IAC5B,IAAI,CAACC,KAAK,CAAC,aAAa,CAAC,GAAGD,UAAU;IACtC,OAAO,IAAI;EACb;EAEA;EACAE,OAAOA,CAACC,QAA4B;IAClC,OAAOX,UAAU,CAACW,QAAQ,CAACC,WAAW,EAAE,EAAEX,KAAK,CAAC;EAClD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}