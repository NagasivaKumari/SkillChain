{"ast":null,"code":"import { Schema } from '../encoding.js';\n/* eslint-disable class-methods-use-this */\nexport class BooleanSchema extends Schema {\n  defaultValue() {\n    return false;\n  }\n  isDefaultValue(data) {\n    return data === false;\n  }\n  prepareMsgpack(data) {\n    if (typeof data === 'boolean') {\n      return data;\n    }\n    throw new Error('Invalid boolean');\n  }\n  fromPreparedMsgpack(encoded,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _rawStringProvider) {\n    if (typeof encoded === 'boolean') {\n      return encoded;\n    }\n    throw new Error('Invalid boolean');\n  }\n  prepareJSON(data,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _options) {\n    if (typeof data === 'boolean') {\n      return data;\n    }\n    throw new Error('Invalid boolean');\n  }\n  fromPreparedJSON(encoded) {\n    if (typeof encoded === 'boolean') {\n      return encoded;\n    }\n    throw new Error('Invalid boolean');\n  }\n}","map":{"version":3,"names":["Schema","BooleanSchema","defaultValue","isDefaultValue","data","prepareMsgpack","Error","fromPreparedMsgpack","encoded","_rawStringProvider","prepareJSON","_options","fromPreparedJSON"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\encoding\\schema\\boolean.ts"],"sourcesContent":["import {\n  Schema,\n  MsgpackEncodingData,\n  MsgpackRawStringProvider,\n  JSONEncodingData,\n  PrepareJSONOptions,\n} from '../encoding.js';\n\n/* eslint-disable class-methods-use-this */\n\nexport class BooleanSchema extends Schema {\n  public defaultValue(): boolean {\n    return false;\n  }\n\n  public isDefaultValue(data: unknown): boolean {\n    return data === false;\n  }\n\n  public prepareMsgpack(data: unknown): MsgpackEncodingData {\n    if (typeof data === 'boolean') {\n      return data;\n    }\n    throw new Error('Invalid boolean');\n  }\n\n  public fromPreparedMsgpack(\n    encoded: MsgpackEncodingData,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _rawStringProvider: MsgpackRawStringProvider\n  ): boolean {\n    if (typeof encoded === 'boolean') {\n      return encoded;\n    }\n    throw new Error('Invalid boolean');\n  }\n\n  public prepareJSON(\n    data: unknown, // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _options: PrepareJSONOptions\n  ): JSONEncodingData {\n    if (typeof data === 'boolean') {\n      return data;\n    }\n    throw new Error('Invalid boolean');\n  }\n\n  public fromPreparedJSON(encoded: JSONEncodingData): boolean {\n    if (typeof encoded === 'boolean') {\n      return encoded;\n    }\n    throw new Error('Invalid boolean');\n  }\n}\n"],"mappings":"AAAA,SACEA,MAAM,QAKD,gBAAgB;AAEvB;AAEA,OAAM,MAAOC,aAAc,SAAQD,MAAM;EAChCE,YAAYA,CAAA;IACjB,OAAO,KAAK;EACd;EAEOC,cAAcA,CAACC,IAAa;IACjC,OAAOA,IAAI,KAAK,KAAK;EACvB;EAEOC,cAAcA,CAACD,IAAa;IACjC,IAAI,OAAOA,IAAI,KAAK,SAAS,EAAE;MAC7B,OAAOA,IAAI;IACb;IACA,MAAM,IAAIE,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEOC,mBAAmBA,CACxBC,OAA4B;EAC5B;EACAC,kBAA4C;IAE5C,IAAI,OAAOD,OAAO,KAAK,SAAS,EAAE;MAChC,OAAOA,OAAO;IAChB;IACA,MAAM,IAAIF,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEOI,WAAWA,CAChBN,IAAa;EAAE;EACfO,QAA4B;IAE5B,IAAI,OAAOP,IAAI,KAAK,SAAS,EAAE;MAC7B,OAAOA,IAAI;IACb;IACA,MAAM,IAAIE,KAAK,CAAC,iBAAiB,CAAC;EACpC;EAEOM,gBAAgBA,CAACJ,OAAyB;IAC/C,IAAI,OAAOA,OAAO,KAAK,SAAS,EAAE;MAChC,OAAOA,OAAO;IAChB;IACA,MAAM,IAAIF,KAAK,CAAC,iBAAiB,CAAC;EACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}