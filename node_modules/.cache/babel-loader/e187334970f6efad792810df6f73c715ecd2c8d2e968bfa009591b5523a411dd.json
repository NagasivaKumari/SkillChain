{"ast":null,"code":"import { encodeMsgpack, decodeMsgpack } from '../../../encoding/encoding.js';\nimport JSONRequest from '../jsonrequest.js';\nimport { SimulateResponse } from './models/types.js';\n/**\n * Sets the default header (if not previously set) for simulating a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSimulateTransactionsHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every(key => key.toLowerCase() !== 'content-type')) {\n    hdrs = {\n      ...headers\n    };\n    hdrs['Content-Type'] = 'application/msgpack';\n  }\n  return hdrs;\n}\n/**\n * Simulates signed txns.\n */\nexport default class SimulateRawTransactions extends JSONRequest {\n  constructor(c, request) {\n    super(c);\n    this.query.format = 'msgpack';\n    this.requestBytes = encodeMsgpack(request);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions/simulate';\n  }\n  executeRequest(headers, customOptions) {\n    const txHeaders = setSimulateTransactionsHeaders(headers);\n    return this.c.post({\n      relativePath: this.path(),\n      data: this.requestBytes,\n      query: this.query,\n      requestHeaders: txHeaders,\n      customOptions\n    });\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response) {\n    return decodeMsgpack(response.body, SimulateResponse);\n  }\n}","map":{"version":3,"names":["encodeMsgpack","decodeMsgpack","JSONRequest","SimulateResponse","setSimulateTransactionsHeaders","headers","hdrs","Object","keys","every","key","toLowerCase","SimulateRawTransactions","constructor","c","request","query","format","requestBytes","path","executeRequest","customOptions","txHeaders","post","relativePath","data","requestHeaders","prepare","response","body"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\client\\v2\\algod\\simulateTransaction.ts"],"sourcesContent":["import { HTTPClient, HTTPClientResponse } from '../../client.js';\nimport { encodeMsgpack, decodeMsgpack } from '../../../encoding/encoding.js';\nimport JSONRequest from '../jsonrequest.js';\nimport { SimulateRequest, SimulateResponse } from './models/types.js';\n\n/**\n * Sets the default header (if not previously set) for simulating a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSimulateTransactionsHeaders(\n  headers: Record<string, any> = {}\n) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'application/msgpack';\n  }\n  return hdrs;\n}\n\n/**\n * Simulates signed txns.\n */\nexport default class SimulateRawTransactions extends JSONRequest<SimulateResponse> {\n  private requestBytes: Uint8Array;\n\n  constructor(c: HTTPClient, request: SimulateRequest) {\n    super(c);\n    this.query.format = 'msgpack';\n    this.requestBytes = encodeMsgpack(request);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions/simulate';\n  }\n\n  protected executeRequest(\n    headers?: Record<string, string>,\n    customOptions?: Record<string, unknown>\n  ): Promise<HTTPClientResponse> {\n    const txHeaders = setSimulateTransactionsHeaders(headers);\n    return this.c.post({\n      relativePath: this.path(),\n      data: this.requestBytes,\n      query: this.query,\n      requestHeaders: txHeaders,\n      customOptions,\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response: HTTPClientResponse): SimulateResponse {\n    return decodeMsgpack(response.body, SimulateResponse);\n  }\n}\n"],"mappings":"AACA,SAASA,aAAa,EAAEC,aAAa,QAAQ,+BAA+B;AAC5E,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAA0BC,gBAAgB,QAAQ,mBAAmB;AAErE;;;;;AAKA,OAAM,SAAUC,8BAA8BA,CAC5CC,OAAA,GAA+B,EAAE;EAEjC,IAAIC,IAAI,GAAGD,OAAO;EAClB,IAAIE,MAAM,CAACC,IAAI,CAACF,IAAI,CAAC,CAACG,KAAK,CAAEC,GAAG,IAAKA,GAAG,CAACC,WAAW,EAAE,KAAK,cAAc,CAAC,EAAE;IAC1EL,IAAI,GAAG;MAAE,GAAGD;IAAO,CAAE;IACrBC,IAAI,CAAC,cAAc,CAAC,GAAG,qBAAqB;EAC9C;EACA,OAAOA,IAAI;AACb;AAEA;;;AAGA,eAAc,MAAOM,uBAAwB,SAAQV,WAA6B;EAGhFW,YAAYC,CAAa,EAAEC,OAAwB;IACjD,KAAK,CAACD,CAAC,CAAC;IACR,IAAI,CAACE,KAAK,CAACC,MAAM,GAAG,SAAS;IAC7B,IAAI,CAACC,YAAY,GAAGlB,aAAa,CAACe,OAAO,CAAC;EAC5C;EAEA;EACAI,IAAIA,CAAA;IACF,OAAO,2BAA2B;EACpC;EAEUC,cAAcA,CACtBf,OAAgC,EAChCgB,aAAuC;IAEvC,MAAMC,SAAS,GAAGlB,8BAA8B,CAACC,OAAO,CAAC;IACzD,OAAO,IAAI,CAACS,CAAC,CAACS,IAAI,CAAC;MACjBC,YAAY,EAAE,IAAI,CAACL,IAAI,EAAE;MACzBM,IAAI,EAAE,IAAI,CAACP,YAAY;MACvBF,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBU,cAAc,EAAEJ,SAAS;MACzBD;KACD,CAAC;EACJ;EAEA;EACAM,OAAOA,CAACC,QAA4B;IAClC,OAAO3B,aAAa,CAAC2B,QAAQ,CAACC,IAAI,EAAE1B,gBAAgB,CAAC;EACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}