{"ast":null,"code":"import JSONRequest from '../jsonrequest.js';\nimport { decodeMsgpack } from '../../../encoding/encoding.js';\nimport { PendingTransactionResponse } from './models/types.js';\n/**\n * returns the transaction information for a specific txid of a pending transaction\n */\nexport default class PendingTransactionInformation extends JSONRequest {\n  constructor(c, txid) {\n    super(c);\n    this.txid = txid;\n    this.query.format = 'msgpack';\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response) {\n    return decodeMsgpack(response.body, PendingTransactionResponse);\n  }\n  path() {\n    return `/v2/transactions/pending/${this.txid}`;\n  }\n  // max sets the maximum number of txs to return\n  max(max) {\n    this.query.max = max;\n    return this;\n  }\n}","map":{"version":3,"names":["JSONRequest","decodeMsgpack","PendingTransactionResponse","PendingTransactionInformation","constructor","c","txid","query","format","prepare","response","body","path","max"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\client\\v2\\algod\\pendingTransactionInformation.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest.js';\nimport { HTTPClient, HTTPClientResponse } from '../../client.js';\nimport { decodeMsgpack } from '../../../encoding/encoding.js';\nimport { PendingTransactionResponse } from './models/types.js';\n\n/**\n * returns the transaction information for a specific txid of a pending transaction\n */\nexport default class PendingTransactionInformation extends JSONRequest<PendingTransactionResponse> {\n  constructor(\n    c: HTTPClient,\n    private txid: string\n  ) {\n    super(c);\n    this.query.format = 'msgpack';\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response: HTTPClientResponse): PendingTransactionResponse {\n    return decodeMsgpack(response.body, PendingTransactionResponse);\n  }\n\n  path() {\n    return `/v2/transactions/pending/${this.txid}`;\n  }\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAE3C,SAASC,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,0BAA0B,QAAQ,mBAAmB;AAE9D;;;AAGA,eAAc,MAAOC,6BAA8B,SAAQH,WAAuC;EAChGI,YACEC,CAAa,EACLC,IAAY;IAEpB,KAAK,CAACD,CAAC,CAAC;IAFA,KAAAC,IAAI,GAAJA,IAAI;IAGZ,IAAI,CAACC,KAAK,CAACC,MAAM,GAAG,SAAS;EAC/B;EAEA;EACAC,OAAOA,CAACC,QAA4B;IAClC,OAAOT,aAAa,CAACS,QAAQ,CAACC,IAAI,EAAET,0BAA0B,CAAC;EACjE;EAEAU,IAAIA,CAAA;IACF,OAAO,4BAA4B,IAAI,CAACN,IAAI,EAAE;EAChD;EAEA;EACAO,GAAGA,CAACA,GAAW;IACb,IAAI,CAACN,KAAK,CAACM,GAAG,GAAGA,GAAG;IACpB,OAAO,IAAI;EACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}