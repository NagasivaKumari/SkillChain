{"ast":null,"code":"import { Schema } from '../encoding.js';\n/* eslint-disable class-methods-use-this */\nexport class ArraySchema extends Schema {\n  constructor(itemSchema) {\n    super();\n    this.itemSchema = itemSchema;\n  }\n  defaultValue() {\n    return [];\n  }\n  isDefaultValue(data) {\n    return Array.isArray(data) && data.length === 0;\n  }\n  prepareMsgpack(data) {\n    if (Array.isArray(data)) {\n      return data.map(item => this.itemSchema.prepareMsgpack(item));\n    }\n    throw new Error('ArraySchema data must be an array');\n  }\n  fromPreparedMsgpack(encoded, rawStringProvider) {\n    if (Array.isArray(encoded)) {\n      return encoded.map((item, index) => this.itemSchema.fromPreparedMsgpack(item, rawStringProvider.withArrayElement(index)));\n    }\n    throw new Error(`ArraySchema encoded data must be an array: ${encoded} (${typeof encoded})`);\n  }\n  prepareJSON(data, options) {\n    if (Array.isArray(data)) {\n      return data.map(item => this.itemSchema.prepareJSON(item, options));\n    }\n    throw new Error('ArraySchema data must be an array');\n  }\n  fromPreparedJSON(encoded) {\n    if (Array.isArray(encoded)) {\n      return encoded.map(item => this.itemSchema.fromPreparedJSON(item));\n    }\n    throw new Error(`ArraySchema encoded data must be an array: ${encoded} (${typeof encoded})`);\n  }\n}","map":{"version":3,"names":["Schema","ArraySchema","constructor","itemSchema","defaultValue","isDefaultValue","data","Array","isArray","length","prepareMsgpack","map","item","Error","fromPreparedMsgpack","encoded","rawStringProvider","index","withArrayElement","prepareJSON","options","fromPreparedJSON"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\encoding\\schema\\array.ts"],"sourcesContent":["import {\n  Schema,\n  MsgpackEncodingData,\n  MsgpackRawStringProvider,\n  JSONEncodingData,\n  PrepareJSONOptions,\n} from '../encoding.js';\n\n/* eslint-disable class-methods-use-this */\n\nexport class ArraySchema extends Schema {\n  constructor(public readonly itemSchema: Schema) {\n    super();\n  }\n\n  public defaultValue(): unknown[] {\n    return [];\n  }\n\n  public isDefaultValue(data: unknown): boolean {\n    return Array.isArray(data) && data.length === 0;\n  }\n\n  public prepareMsgpack(data: unknown): MsgpackEncodingData {\n    if (Array.isArray(data)) {\n      return data.map((item) => this.itemSchema.prepareMsgpack(item));\n    }\n    throw new Error('ArraySchema data must be an array');\n  }\n\n  public fromPreparedMsgpack(\n    encoded: MsgpackEncodingData,\n    rawStringProvider: MsgpackRawStringProvider\n  ): unknown[] {\n    if (Array.isArray(encoded)) {\n      return encoded.map((item, index) =>\n        this.itemSchema.fromPreparedMsgpack(\n          item,\n          rawStringProvider.withArrayElement(index)\n        )\n      );\n    }\n    throw new Error(\n      `ArraySchema encoded data must be an array: ${encoded} (${typeof encoded})`\n    );\n  }\n\n  public prepareJSON(\n    data: unknown,\n    options: PrepareJSONOptions\n  ): JSONEncodingData {\n    if (Array.isArray(data)) {\n      return data.map((item) => this.itemSchema.prepareJSON(item, options));\n    }\n    throw new Error('ArraySchema data must be an array');\n  }\n\n  public fromPreparedJSON(encoded: JSONEncodingData): unknown[] {\n    if (Array.isArray(encoded)) {\n      return encoded.map((item) => this.itemSchema.fromPreparedJSON(item));\n    }\n    throw new Error(\n      `ArraySchema encoded data must be an array: ${encoded} (${typeof encoded})`\n    );\n  }\n}\n"],"mappings":"AAAA,SACEA,MAAM,QAKD,gBAAgB;AAEvB;AAEA,OAAM,MAAOC,WAAY,SAAQD,MAAM;EACrCE,YAA4BC,UAAkB;IAC5C,KAAK,EAAE;IADmB,KAAAA,UAAU,GAAVA,UAAU;EAEtC;EAEOC,YAAYA,CAAA;IACjB,OAAO,EAAE;EACX;EAEOC,cAAcA,CAACC,IAAa;IACjC,OAAOC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC;EACjD;EAEOC,cAAcA,CAACJ,IAAa;IACjC,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAK,IAAI,CAACT,UAAU,CAACO,cAAc,CAACE,IAAI,CAAC,CAAC;IACjE;IACA,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;EACtD;EAEOC,mBAAmBA,CACxBC,OAA4B,EAC5BC,iBAA2C;IAE3C,IAAIT,KAAK,CAACC,OAAO,CAACO,OAAO,CAAC,EAAE;MAC1B,OAAOA,OAAO,CAACJ,GAAG,CAAC,CAACC,IAAI,EAAEK,KAAK,KAC7B,IAAI,CAACd,UAAU,CAACW,mBAAmB,CACjCF,IAAI,EACJI,iBAAiB,CAACE,gBAAgB,CAACD,KAAK,CAAC,CAC1C,CACF;IACH;IACA,MAAM,IAAIJ,KAAK,CACb,8CAA8CE,OAAO,KAAK,OAAOA,OAAO,GAAG,CAC5E;EACH;EAEOI,WAAWA,CAChBb,IAAa,EACbc,OAA2B;IAE3B,IAAIb,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MACvB,OAAOA,IAAI,CAACK,GAAG,CAAEC,IAAI,IAAK,IAAI,CAACT,UAAU,CAACgB,WAAW,CAACP,IAAI,EAAEQ,OAAO,CAAC,CAAC;IACvE;IACA,MAAM,IAAIP,KAAK,CAAC,mCAAmC,CAAC;EACtD;EAEOQ,gBAAgBA,CAACN,OAAyB;IAC/C,IAAIR,KAAK,CAACC,OAAO,CAACO,OAAO,CAAC,EAAE;MAC1B,OAAOA,OAAO,CAACJ,GAAG,CAAEC,IAAI,IAAK,IAAI,CAACT,UAAU,CAACkB,gBAAgB,CAACT,IAAI,CAAC,CAAC;IACtE;IACA,MAAM,IAAIC,KAAK,CACb,8CAA8CE,OAAO,KAAK,OAAOA,OAAO,GAAG,CAC5E;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}