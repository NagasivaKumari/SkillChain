{"ast":null,"code":"import { Decoder } from \"./Decoder.mjs\";\n/**\n * @deprecated No longer supported.\n */\nexport var defaultDecodeOptions = undefined;\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeStream}, or {@link decodeArrayStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode(buffer, options) {\n  var decoder = new Decoder(options);\n  return decoder.decode(buffer);\n}\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti(buffer, options) {\n  var decoder = new Decoder(options);\n  return decoder.decodeMulti(buffer);\n}","map":{"version":3,"names":["Decoder","defaultDecodeOptions","undefined","decode","buffer","options","decoder","decodeMulti"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algorand-msgpack\\src\\decode.ts"],"sourcesContent":["import { Decoder } from \"./Decoder\";\nimport type { DecoderOptions } from \"./Decoder\";\nimport type { SplitUndefined } from \"./context\";\n\n/**\n * @deprecated Use {@link DecoderOptions} instead.\n */\nexport type DecodeOptions = never;\n\n/**\n * @deprecated No longer supported.\n */\nexport const defaultDecodeOptions: never = undefined as never;\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync}, {@link decodeStream}, or {@link decodeArrayStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): unknown {\n  const decoder = new Decoder(options);\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options?: DecoderOptions<SplitUndefined<ContextType>>,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(options);\n  return decoder.decodeMulti(buffer);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,eAAY;AASpC;;;AAGA,OAAO,IAAMC,oBAAoB,GAAUC,SAAkB;AAE7D;;;;;;;;;AASA,OAAM,SAAUC,MAAMA,CACpBC,MAAwC,EACxCC,OAAqD;EAErD,IAAMC,OAAO,GAAG,IAAIN,OAAO,CAACK,OAAO,CAAC;EACpC,OAAOC,OAAO,CAACH,MAAM,CAACC,MAAM,CAAC;AAC/B;AAEA;;;;;;;AAOA,OAAM,SAAUG,WAAWA,CACzBH,MAAwC,EACxCC,OAAqD;EAErD,IAAMC,OAAO,GAAG,IAAIN,OAAO,CAACK,OAAO,CAAC;EACpC,OAAOC,OAAO,CAACC,WAAW,CAACH,MAAM,CAAC;AACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}