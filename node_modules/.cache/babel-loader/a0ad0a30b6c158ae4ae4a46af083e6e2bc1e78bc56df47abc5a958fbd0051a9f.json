{"ast":null,"code":"import JSONRequest from '../jsonrequest.js';\nimport { decodeJSON } from '../../../encoding/encoding.js';\nimport { BoxesResponse } from './models/types.js';\nexport default class SearchForApplicationBoxes extends JSONRequest {\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idboxes)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(c, index) {\n    super(c);\n    this.index = BigInt(index);\n  }\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next) {\n    this.query.next = next;\n    return this;\n  }\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResponse = await indexerClient\n   *        .searchForApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response) {\n    return decodeJSON(response.getJSONText(), BoxesResponse);\n  }\n}","map":{"version":3,"names":["JSONRequest","decodeJSON","BoxesResponse","SearchForApplicationBoxes","constructor","c","index","BigInt","path","nextToken","next","query","limit","prepare","response","getJSONText"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\client\\v2\\indexer\\searchForApplicationBoxes.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest.js';\nimport { HTTPClient, HTTPClientResponse } from '../../client.js';\nimport { decodeJSON } from '../../../encoding/encoding.js';\nimport { BoxesResponse } from './models/types.js';\n\nexport default class SearchForApplicationBoxes extends JSONRequest<BoxesResponse> {\n  private index: bigint;\n\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idboxes)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(c: HTTPClient, index: number | bigint) {\n    super(c);\n    this.index = BigInt(index);\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next: string) {\n    this.query.next = next;\n    return this;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResponse = await indexerClient\n   *        .searchForApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response: HTTPClientResponse): BoxesResponse {\n    return decodeJSON(response.getJSONText(), BoxesResponse);\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAE3C,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,eAAc,MAAOC,yBAA0B,SAAQH,WAA0B;EAG/E;;;;;;;;;;;;;;;;;;;;;;;;;;EA0BAI,YAAYC,CAAa,EAAEC,KAAsB;IAC/C,KAAK,CAACD,CAAC,CAAC;IACR,IAAI,CAACC,KAAK,GAAGC,MAAM,CAACD,KAAK,CAAC;EAC5B;EAEA;;;EAGAE,IAAIA,CAAA;IACF,OAAO,oBAAoB,IAAI,CAACF,KAAK,QAAQ;EAC/C;EAEA;;;;;;;;;;;;;;;;;;;;;;;;EAwBAG,SAASA,CAACC,IAAY;IACpB,IAAI,CAACC,KAAK,CAACD,IAAI,GAAGA,IAAI;IACtB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAE,KAAKA,CAACA,KAAa;IACjB,IAAI,CAACD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;EACAC,OAAOA,CAACC,QAA4B;IAClC,OAAOb,UAAU,CAACa,QAAQ,CAACC,WAAW,EAAE,EAAEb,aAAa,CAAC;EAC1D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}