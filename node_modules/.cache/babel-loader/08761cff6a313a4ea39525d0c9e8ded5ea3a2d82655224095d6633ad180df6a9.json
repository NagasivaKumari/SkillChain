{"ast":null,"code":"import JSONRequest from '../jsonrequest.js';\nimport { decodeJSON } from '../../../encoding/encoding.js';\nimport { AssetHoldingsResponse } from './models/types.js';\nexport default class LookupAccountAssets extends JSONRequest {\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(c, account) {\n    super(c);\n    this.account = account.toString();\n  }\n  /**\n   * @returns `/v2/accounts/${account}/assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/assets`;\n  }\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit) {\n    this.query.limit = limit;\n    return this;\n  }\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round) {\n    this.query.round = round;\n    return this;\n  }\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken) {\n    this.query.next = nextToken;\n    return this;\n  }\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .assetId(assetId)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetId(index) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response) {\n    return decodeJSON(response.getJSONText(), AssetHoldingsResponse);\n  }\n}","map":{"version":3,"names":["JSONRequest","decodeJSON","AssetHoldingsResponse","LookupAccountAssets","constructor","c","account","toString","path","limit","query","round","nextToken","next","includeAll","value","assetId","index","prepare","response","getJSONText"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\client\\v2\\indexer\\lookupAccountAssets.ts"],"sourcesContent":["import JSONRequest from '../jsonrequest.js';\nimport { HTTPClient, HTTPClientResponse } from '../../client.js';\nimport { decodeJSON } from '../../../encoding/encoding.js';\nimport { Address } from '../../../encoding/address.js';\nimport { AssetHoldingsResponse } from './models/types.js';\n\nexport default class LookupAccountAssets extends JSONRequest<AssetHoldingsResponse> {\n  private account: string;\n\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, account: string | Address) {\n    super(c);\n    this.account = account.toString();\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/assets`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number | bigint) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .assetId(assetId)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetId(index: number | bigint) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(response: HTTPClientResponse): AssetHoldingsResponse {\n    return decodeJSON(response.getJSONText(), AssetHoldingsResponse);\n  }\n}\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAE3C,SAASC,UAAU,QAAQ,+BAA+B;AAE1D,SAASC,qBAAqB,QAAQ,mBAAmB;AAEzD,eAAc,MAAOC,mBAAoB,SAAQH,WAAkC;EAGjF;;;;;;;;;;;;;EAaAI,YAAYC,CAAa,EAAEC,OAAyB;IAClD,KAAK,CAACD,CAAC,CAAC;IACR,IAAI,CAACC,OAAO,GAAGA,OAAO,CAACC,QAAQ,EAAE;EACnC;EAEA;;;EAGAC,IAAIA,CAAA;IACF,OAAO,gBAAgB,IAAI,CAACF,OAAO,SAAS;EAC9C;EAEA;;;;;;;;;;;;;;;;EAgBAG,KAAKA,CAACA,KAAa;IACjB,IAAI,CAACC,KAAK,CAACD,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAE,KAAKA,CAACA,KAAsB;IAC1B,IAAI,CAACD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACxB,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;;;;;;;;EAsBAC,SAASA,CAACA,SAAiB;IACzB,IAAI,CAACF,KAAK,CAACG,IAAI,GAAGD,SAAS;IAC3B,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;EAcAE,UAAUA,CAACC,KAAK,GAAG,IAAI;IACrB,IAAI,CAACL,KAAK,CAAC,aAAa,CAAC,GAAGK,KAAK;IACjC,OAAO,IAAI;EACb;EAEA;;;;;;;;;;;;;;;EAeAC,OAAOA,CAACC,KAAsB;IAC5B,IAAI,CAACP,KAAK,CAAC,UAAU,CAAC,GAAGO,KAAK;IAC9B,OAAO,IAAI;EACb;EAEA;EACAC,OAAOA,CAACC,QAA4B;IAClC,OAAOlB,UAAU,CAACkB,QAAQ,CAACC,WAAW,EAAE,EAAElB,qBAAqB,CAAC;EAClE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}