{"ast":null,"code":"import { NamedMapSchema, FixedLengthByteArraySchema, Uint64Schema, ArraySchema, OptionalSchema, allOmitEmpty } from '../../encoding/schema/index.js';\nimport { ensureSafeUnsignedInteger } from '../../utils/utils.js';\nexport const ENCODED_SUBSIG_SCHEMA = new NamedMapSchema(allOmitEmpty([{\n  key: 'pk',\n  valueSchema: new FixedLengthByteArraySchema(32)\n}, {\n  key: 's',\n  valueSchema: new OptionalSchema(new FixedLengthByteArraySchema(64))\n}]));\nexport function encodedSubsigFromEncodingData(data) {\n  if (!(data instanceof Map)) {\n    throw new Error(`Invalid decoded EncodedSubsig: ${data}`);\n  }\n  const subsig = {\n    pk: data.get('pk')\n  };\n  if (data.get('s')) {\n    subsig.s = data.get('s');\n  }\n  return subsig;\n}\nexport function encodedSubsigToEncodingData(subsig) {\n  const data = new Map([['pk', subsig.pk]]);\n  if (subsig.s) {\n    data.set('s', subsig.s);\n  }\n  return data;\n}\nexport const ENCODED_MULTISIG_SCHEMA = new NamedMapSchema(allOmitEmpty([{\n  key: 'v',\n  valueSchema: new Uint64Schema()\n}, {\n  key: 'thr',\n  valueSchema: new Uint64Schema()\n}, {\n  key: 'subsig',\n  valueSchema: new ArraySchema(ENCODED_SUBSIG_SCHEMA)\n}]));\nexport function encodedMultiSigFromEncodingData(data) {\n  if (!(data instanceof Map)) {\n    throw new Error(`Invalid decoded EncodedMultiSig: ${data}`);\n  }\n  return {\n    v: ensureSafeUnsignedInteger(data.get('v')),\n    thr: ensureSafeUnsignedInteger(data.get('thr')),\n    subsig: data.get('subsig').map(encodedSubsigFromEncodingData)\n  };\n}\nexport function encodedMultiSigToEncodingData(msig) {\n  return new Map([['v', msig.v], ['thr', msig.thr], ['subsig', msig.subsig.map(encodedSubsigToEncodingData)]]);\n}","map":{"version":3,"names":["NamedMapSchema","FixedLengthByteArraySchema","Uint64Schema","ArraySchema","OptionalSchema","allOmitEmpty","ensureSafeUnsignedInteger","ENCODED_SUBSIG_SCHEMA","key","valueSchema","encodedSubsigFromEncodingData","data","Map","Error","subsig","pk","get","s","encodedSubsigToEncodingData","set","ENCODED_MULTISIG_SCHEMA","encodedMultiSigFromEncodingData","v","thr","map","encodedMultiSigToEncodingData","msig"],"sources":["C:\\Users\\naga shiva kumari\\OneDrive\\node_modules\\algosdk\\src\\types\\transactions\\encoded.ts"],"sourcesContent":["import {\n  NamedMapSchema,\n  FixedLengthByteArraySchema,\n  Uint64Schema,\n  ArraySchema,\n  OptionalSchema,\n  allOmitEmpty,\n} from '../../encoding/schema/index.js';\nimport { ensureSafeUnsignedInteger } from '../../utils/utils.js';\n\nexport interface EncodedSubsig {\n  /**\n   *  The public key\n   */\n  pk: Uint8Array;\n\n  /**\n   * The signature provided by the public key, if any\n   */\n  s?: Uint8Array;\n}\n\nexport const ENCODED_SUBSIG_SCHEMA = new NamedMapSchema(\n  allOmitEmpty([\n    {\n      key: 'pk',\n      valueSchema: new FixedLengthByteArraySchema(32),\n    },\n    {\n      key: 's',\n      valueSchema: new OptionalSchema(new FixedLengthByteArraySchema(64)),\n    },\n  ])\n);\n\nexport function encodedSubsigFromEncodingData(data: unknown): EncodedSubsig {\n  if (!(data instanceof Map)) {\n    throw new Error(`Invalid decoded EncodedSubsig: ${data}`);\n  }\n  const subsig: EncodedSubsig = {\n    pk: data.get('pk'),\n  };\n  if (data.get('s')) {\n    subsig.s = data.get('s');\n  }\n  return subsig;\n}\n\nexport function encodedSubsigToEncodingData(\n  subsig: EncodedSubsig\n): Map<string, unknown> {\n  const data = new Map<string, unknown>([['pk', subsig.pk]]);\n  if (subsig.s) {\n    data.set('s', subsig.s);\n  }\n  return data;\n}\n\n/**\n * A rough structure for the encoded multi signature transaction object.\n * Every property is labelled with its associated `MultisigMetadata` type property\n */\nexport interface EncodedMultisig {\n  /**\n   * version\n   */\n  v: number;\n\n  /**\n   * threshold\n   */\n  thr: number;\n\n  /**\n   * Subset of signatures. A threshold of `thr` signors is required.\n   */\n  subsig: EncodedSubsig[];\n}\n\nexport const ENCODED_MULTISIG_SCHEMA = new NamedMapSchema(\n  allOmitEmpty([\n    {\n      key: 'v',\n      valueSchema: new Uint64Schema(),\n    },\n    {\n      key: 'thr',\n      valueSchema: new Uint64Schema(),\n    },\n    {\n      key: 'subsig',\n      valueSchema: new ArraySchema(ENCODED_SUBSIG_SCHEMA),\n    },\n  ])\n);\n\nexport function encodedMultiSigFromEncodingData(\n  data: unknown\n): EncodedMultisig {\n  if (!(data instanceof Map)) {\n    throw new Error(`Invalid decoded EncodedMultiSig: ${data}`);\n  }\n  return {\n    v: ensureSafeUnsignedInteger(data.get('v')),\n    thr: ensureSafeUnsignedInteger(data.get('thr')),\n    subsig: data.get('subsig').map(encodedSubsigFromEncodingData),\n  };\n}\n\nexport function encodedMultiSigToEncodingData(\n  msig: EncodedMultisig\n): Map<string, unknown> {\n  return new Map<string, unknown>([\n    ['v', msig.v],\n    ['thr', msig.thr],\n    ['subsig', msig.subsig.map(encodedSubsigToEncodingData)],\n  ]);\n}\n"],"mappings":"AAAA,SACEA,cAAc,EACdC,0BAA0B,EAC1BC,YAAY,EACZC,WAAW,EACXC,cAAc,EACdC,YAAY,QACP,gCAAgC;AACvC,SAASC,yBAAyB,QAAQ,sBAAsB;AAchE,OAAO,MAAMC,qBAAqB,GAAG,IAAIP,cAAc,CACrDK,YAAY,CAAC,CACX;EACEG,GAAG,EAAE,IAAI;EACTC,WAAW,EAAE,IAAIR,0BAA0B,CAAC,EAAE;CAC/C,EACD;EACEO,GAAG,EAAE,GAAG;EACRC,WAAW,EAAE,IAAIL,cAAc,CAAC,IAAIH,0BAA0B,CAAC,EAAE,CAAC;CACnE,CACF,CAAC,CACH;AAED,OAAM,SAAUS,6BAA6BA,CAACC,IAAa;EACzD,IAAI,EAAEA,IAAI,YAAYC,GAAG,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,kCAAkCF,IAAI,EAAE,CAAC;EAC3D;EACA,MAAMG,MAAM,GAAkB;IAC5BC,EAAE,EAAEJ,IAAI,CAACK,GAAG,CAAC,IAAI;GAClB;EACD,IAAIL,IAAI,CAACK,GAAG,CAAC,GAAG,CAAC,EAAE;IACjBF,MAAM,CAACG,CAAC,GAAGN,IAAI,CAACK,GAAG,CAAC,GAAG,CAAC;EAC1B;EACA,OAAOF,MAAM;AACf;AAEA,OAAM,SAAUI,2BAA2BA,CACzCJ,MAAqB;EAErB,MAAMH,IAAI,GAAG,IAAIC,GAAG,CAAkB,CAAC,CAAC,IAAI,EAAEE,MAAM,CAACC,EAAE,CAAC,CAAC,CAAC;EAC1D,IAAID,MAAM,CAACG,CAAC,EAAE;IACZN,IAAI,CAACQ,GAAG,CAAC,GAAG,EAAEL,MAAM,CAACG,CAAC,CAAC;EACzB;EACA,OAAON,IAAI;AACb;AAuBA,OAAO,MAAMS,uBAAuB,GAAG,IAAIpB,cAAc,CACvDK,YAAY,CAAC,CACX;EACEG,GAAG,EAAE,GAAG;EACRC,WAAW,EAAE,IAAIP,YAAY;CAC9B,EACD;EACEM,GAAG,EAAE,KAAK;EACVC,WAAW,EAAE,IAAIP,YAAY;CAC9B,EACD;EACEM,GAAG,EAAE,QAAQ;EACbC,WAAW,EAAE,IAAIN,WAAW,CAACI,qBAAqB;CACnD,CACF,CAAC,CACH;AAED,OAAM,SAAUc,+BAA+BA,CAC7CV,IAAa;EAEb,IAAI,EAAEA,IAAI,YAAYC,GAAG,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,oCAAoCF,IAAI,EAAE,CAAC;EAC7D;EACA,OAAO;IACLW,CAAC,EAAEhB,yBAAyB,CAACK,IAAI,CAACK,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3CO,GAAG,EAAEjB,yBAAyB,CAACK,IAAI,CAACK,GAAG,CAAC,KAAK,CAAC,CAAC;IAC/CF,MAAM,EAAEH,IAAI,CAACK,GAAG,CAAC,QAAQ,CAAC,CAACQ,GAAG,CAACd,6BAA6B;GAC7D;AACH;AAEA,OAAM,SAAUe,6BAA6BA,CAC3CC,IAAqB;EAErB,OAAO,IAAId,GAAG,CAAkB,CAC9B,CAAC,GAAG,EAAEc,IAAI,CAACJ,CAAC,CAAC,EACb,CAAC,KAAK,EAAEI,IAAI,CAACH,GAAG,CAAC,EACjB,CAAC,QAAQ,EAAEG,IAAI,CAACZ,MAAM,CAACU,GAAG,CAACN,2BAA2B,CAAC,CAAC,CACzD,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}